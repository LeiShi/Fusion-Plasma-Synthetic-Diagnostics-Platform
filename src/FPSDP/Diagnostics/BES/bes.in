# For double input, put .0 for assuring that the data is read as
# a float

[Beam geometry]
# position of the beam (X,Y,Z) (in meters)
# Z is for the height
position = [2,-0.49,0.0]
# direction of the beam, it will be normalized in the code
direction = [-0.2,0.7,0.0]
# beam width (FWHM in meter)
# horizontal
beam_width_h = 0.13
# vertical
beam_width_v = 0.27
# number of points for the discretization along the beam direction
# the ending point is computed with the window of the scan
# (the beam line goes from the position until the end of the mesh)
Nz = 128


[Beam energy]
# total power of the beam (in W)
power = 1.2e6
# fraction of power between the different beam components (in percent)
f = [77,17.0,6.0]
# Energy of the different components (keV)
E = [75.0,37.5,25.0]
# mass of each components of the beam (in amu)
mass_b = [1.0,2.0,3.0]

[Collisions]
# ADAS files (separated by ,)
# attenuation
adas_atte = ["bms10#h_h1.dat"]
# emission
adas_emis = ["bme10#h_h1.dat"]
# collisions considered (index start to 0)
# first index is for a file (in adas_file) and second is
# for the beam component
# not checked in the code, but one file should correspond
# to one beam component (usually only one file is used for
# all beam components)
coll_atte = [[0,0], [0,1], [0,2]]
coll_emis = [[0,0], [0,1], [0,2]]

# quantum number of the low energy state and the excited one
# the code assume an hydrogen atom
n_low = 2
n_high = 3
# number of points for the discretization of the lifetime effect
# exponential decay => small distance, so do not need a big number
Nlt = 4
# t_max*lifetime = upper value of the integrale for the lifetime effect
# cutoff value 
t_max = 3


[Optics]
# position of the lens
pos_lens = [1.6,-0.38,0]
# position of the focus point for each fiber
X = [1.33617, 1.33490, 1.33350, 1.33222, 1.33094,
  1.32965, 1.32837, 1.32708, 1.32579, 1.32449,
  1.32320, 1.32190, 1.32073, 1.31942, 1.31811,
  1.31693, 1.31575, 1.31443, 1.31324, 1.31205,
  1.31086, 1.30966, 1.30846, 1.30725, 1.30605,
  1.30498, 1.30376, 1.30255, 1.30146, 1.30024,
  1.29915, 1.29806]
Y = [-1.68692, -1.67515, -1.66219, -1.65040, -1.63856,
  -1.62669, -1.61482, -1.60293, -1.59100, -1.57904,
  -1.56706, -1.55506, -1.54424, -1.53217, -1.52009,
  -1.50919, -1.49828, -1.48610, -1.47511, -1.46411,
  -1.45309, -1.44204, -1.43095, -1.41983, -1.40870,
  -1.39879, -1.38758, -1.37635, -1.36635, -1.35507,
  -1.34502, -1.33493]
  
Z = [0.0, 0.0, 0.0, 0.0, 0.0,
  0.0, 0.0, 0.0, 0.0, 0.0,
  0.0, 0.0, 0.0, 0.0, 0.0,
  0.0, 0.0, 0.0, 0.0, 0.0,
  0.0, 0.0, 0.0, 0.0, 0.0,
  0.0, 0.0, 0.0, 0.0, 0.0,
  0.0, 0.0]

# radius of the lens
rad_lens = 0.2
# radius of the ring (size sampling plane at the
# focus point)
rad_ring = 0.01
# integration of the intensity along
# the sightline
# in [foc-int*w, foc+int*w] where w is the
# average of the horizontal and vertical
# standard deviation of the beam
# we are assuming that the focus point are
# inside the beam
int = 2
# number of intervals for the integration
Nint = 20
# number of section for the integral of the solid angle
Nsol = 10

[Data]
# path to the simulation data
data_path = /global/project/projectdirs/m499/jlang/particle_pinch/
# precision for all the axis
N = [32, 32, 8]
#N = [128,128,32]
# timestep wanted
timestart = 175
timeend = 180
timestep = 4
