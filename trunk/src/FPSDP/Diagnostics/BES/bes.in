# For double input, put .0 for assuring that the data is read as
# a float

[Beam geometry]
# position of the beam (X,Y,Z) (in meters)
# Z is for the height
position = [2,-0.49,0.0]
# direction of the beam, it will be normalized in the code
direction = [-0.2,0.7,0.0]
# beam width (FWHM in meter)
# horizontal
beam_width_h = 0.13
# vertical
beam_width_v = 0.27
# number of points for the discretization along the beam direction
# the ending point is computed with the window of the scan
# (the beam line goes from the position until the end of the mesh)
Nz = 128


[Beam energy]
# total power of the beam (in W)
power = 1.2e6
# fraction of power between the different beam components (in percent)
f = [77,17.0,6.0]
# Energy of the different components (keV)
E = [75.0,37.5,25.0]
# mass of each components of the beam (in amu)
mass_b = [1.0,2.0,3.0]

[Collisions]
# ADAS files (separated by ,)
# attenuation
adas_atte = ["bms10#h_h1.dat"]
# emission
adas_emis = ["bme10#h_h1.dat"]
# collisions considered (index start to 0)
# first index is for a file (in adas_file) and second is
# for the beam component
coll_atte = [[0,0], [0,1], [0,2]]
coll_emis = [[0,0], [0,1], [0,2]]

# quantum number of the low energy state and the excited one
n_low = 2
n_high = 3
# number of points for the discretization of the lifetime effect
# small distance, so do not need a big number
Nlt = 4
# t_max*lifetime = upper value of the integrale for the lifetime effect
t_max = 3

[Fiber]
# position of each fiber
X = [1.608, 1.609, 1.605, 1.603]
Y = [-0.388, -0.388, -0.388, -0.388]
Z = [0.0, 0.0, 0.0, 0.0]

[Optics]
# direction of the optics (will be normalized)
dir = [1.0,1.0,0.0]
# focal of the last lens [meter]
foc = 0.4
# entrance pupil
rad_pup = 0.2
# radius of the focus point
rad_foc = 0.01
# integration of the intensity along
# the sightline
# in [foc-int*w, foc+int*w] where w is the
# average of the horizontal and vertical
# beam width
int = 2
# number of intervals for the integration
Nint = 20
# number of section for the integral of the solid angle
Nsol = 10

[Data]
# path to the simulation data
data_path = /global/project/projectdirs/m499/jlang/particle_pinch/
# precision for all the axis
N = [32, 32, 8]
#N = [128,128,32]
# timestep wanted
timestart = 175
timeend = 180
timestep = 4
