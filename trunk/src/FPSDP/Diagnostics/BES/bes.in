# For double input, put .0 for assuring that the data is read as
# a float

[Beam geometry]
# position of the beam (X,Y,Z) (in meters)
# Z is for the height
position = [2.3,0.0,0.0]
# direction of the beam, it will be normalized in the code
direction = [-1.0,0.0,0.0]
# beam width (FWHM in meter)
# horizontal
beam_width_h = 0.13
# vertical
beam_width_v = 0.27
# number of points for the discretization along the beam direction
# the ending point is computed with the window of the scan
# (the beam line goes from the position until the end of the mesh)
Nz = 128


[Beam energy]
# total power of the beam (in W)
power = 1.2e6
# fraction of power between the different beam components (in percent)
f = [77,17.0,6.0]
# Energy of the different components (keV)
E = [75.0,37.5,25.0]
# mass of each components of the beam (in amu)
mass_b = [1.0,2.0,3.0]

[Collisions]
# ADAS files (separated by ,)
# attenuation
adas_atte = ["bms10#h_h1.dat"]
# emission
adas_emis = ["bme10#h_h1.dat"]
# collisions considered (index start to 0)
# first index is for a file (in adas_file) and second is
# for the beam component
# not checked in the code, but one file should correspond
# to one beam component (usually only one file is used for
# all beam components)
coll_atte = [[0,0], [0,1], [0,2]]
coll_emis = [[0,0], [0,1], [0,2]]

# quantum number of the low energy state and the excited one
# the code assume an hydrogen atom
n_low = 2
n_high = 3
# number of points for the discretization of the lifetime effect
# exponential decay => small distance, so do not need a big number
Nlt = 4
# t_max*lifetime = upper value of the integrale for the lifetime effect
# cutoff value
# if t_max = 0, the lifetime will not be used
t_max = 2.0


[Optics]
# position of the lens
pos_lens = [1.5,1.74,0.0]
# position of the focus point for each fiber
# Z is assumed to be an array of the good size,
# X and Y can be a float or an array
X = [2.22364, 2.23378, 2.24402, 2.25411, 2.26448, 2.27514,
     2.28568, 2.29622, 2.22364, 2.23378, 2.24402, 2.25411,
     2.26448, 2.27514, 2.28568, 2.29622, 2.22364, 2.23378,
     2.24402, 2.25411, 2.26448, 2.27514, 2.28568, 2.29622,
     2.22364, 2.23378, 2.24402, 2.25411, 2.26448, 2.27514,
     2.28568, 2.29622, 2.22364, 2.23378, 2.24402, 2.25411,
     2.26448, 2.27514, 2.28568, 2.29622, 2.22364, 2.23378,
     2.24402, 2.25411, 2.26448, 2.27514, 2.28568, 2.29622,
     2.22364, 2.23378, 2.24402, 2.25411, 2.26448, 2.27514,
     2.28568, 2.29622, 2.22364, 2.23378, 2.24402, 2.25411,
     2.26448, 2.27514, 2.28568, 2.29622]
						    
  
Z = [-0.0140560, -0.0145320,  -0.0145320,  -0.0147840,  -0.0152600,  -0.0152600,
     -0.0154120, -0.0156640,  -0.000916000,-0.00106800, -0.00129200, -0.00151600,
     -0.00166800,-0.00166800, -0.00182000, -0.00179200, -0.0408400,  -0.0414160,
     -0.0414440, -0.0420200,  -0.0422720,  -0.0425960,  -0.0431000,  -0.0434240,
     -0.0277000, -0.0279520,  -0.0282040,  -0.0284560,  -0.0287800,  -0.0292560,
     -0.0295080, -0.0295080,   0.0122520,   0.0120280,   0.0121280,   0.0119760,
      0.0120760,  0.0119520,   0.0118000,   0.0119000,   0.0250680,   0.0252400,
      0.0253680,  0.0254680,   0.0253440,   0.0254720,   0.0256720,   0.0255480,
      0.0382080,  0.0383360,   0.0385360,   0.0387360,   0.0391160,   0.0390920,
      0.0392920,  0.0394200,   0.0512760,   0.0515040,   0.0519560,   0.0521840,
      0.0656800,  0.0662320,   0.0667840,   0.0670400]
  
Y = 0.0

# radius of the lens
rad_lens = 0.2
# radius of the ring (size sampling plane at the
# focus point)
# can be an array of the size of X,Y,Z or a float
rad_ring = 0.01

# integration of the intensity along
# the sightline
# in [foc-int*w, foc+int*w] where w is the
# average of the horizontal and vertical
# standard deviation of the beam
# we are assuming that the focus point are
# inside the beam
int = 1.5
# number of intervals for the integration
Nint = 4
# number of section for the integral of the solid angle
Nsol = 10

# type of integration for the emission
# 1D for taking into account only the emission
# of the central line or 2D for doing an integration
# over a plane
type_int = 2D

[Data]
# path to the simulation data
data_path = /global/project/projectdirs/m499/jlang/particle_pinch/
# precision for all the axis
N = [16, 4, 16]
#N = [128, 32, 128]
# max of the lifetime of the excited particles
# (used for computing the limits of the mesh)
tau_max = 1e-8
# timestep wanted
timestart = 179
timeend = 180
timestep = 1
